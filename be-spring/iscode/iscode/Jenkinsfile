pipeline {
    agent any

    environment {
//         DOCKER_IMAGE = 'my-app:latest'
        DOCKER_IMAGE = 'ohuggy/be_test'
        DOCKER_HUB = 'dockerhub'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'infra/deploy',
                    url: 'https://lab.ssafy.com/s11-webmobile1-sub2/S11P12E108.git',
                    credentialsId: 'Be' // Jenkins 자격 증명 ID
            }
        }

        stage('Build') {
            steps {
                dir('be-spring/iscode/iscode') {
                    script {
                        def gradleHome = tool name: 'Cokkiri-gradle', type: 'gradle'
                            sh 'chmod 777 gradlew'
                            sh './gradlew bootJar'
                    }
                }
            }
        }
        stage('Archive') {
            steps {
                dir('be-spring/iscode/iscode') {
                    archiveArtifacts artifacts: '**/build/libs/*.jar', allowEmptyArchive: true
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                }
            }
        }
        stage('push docker image to docker hub'){
            steps{
                script{
                 docker.withRegistry('https://index.docker.io/v1/', env.DOCKER_HUB) {
                    // Docker 이미지 빌드
                     sh 'docker push ${DOCKER_IMAGE}'
                }
            }
        }
       stage('Deploy Docker Container') {
            steps {
                script {
                    // 기존 컨테이너가 존재하면 삭제
                    sh 'docker rm -f be_test_container || true'

                    // 새로운 컨테이너 생성 및 실행
                    sh 'docker run -d --name be_test_container ${DOCKER_IMAGE}'
                }
            }
        }
        post {
            always {
                script {
                    // Cleanup: Docker Hub에서 로그아웃
                    sh 'docker logout'
                }
            }
        }
    }
}