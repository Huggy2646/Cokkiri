services:
  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1sC0de!
      MYSQL_DATABASE: ssafy
    volumes:
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_develop_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - Cokkiri-develop-Network

  backend:
    image: ohuggy/cokkiri_develop_be
    container_name: Cokkiri-springboot
    ports:
      - "8085:8080"
    depends_on:
      - db
    networks:
      - Cokkiri-develop-Network

  frontend:   # 'frontend' 서비스 들여쓰기 수정
    image: ohuggy/cokkiri_develop_fe
    container_name: vuejs
    ports:
      - "8086:80"
    depends_on:
      - backend
    networks:
      - Cokkiri-develop-Network
  
  # openvidu-server:
  #   image: openvidu/openvidu-dev:2.30.0
  #   environment:
  #     - openvidu.secret=MY_SECRET
  #     - openvidu.publicurl=https://i11e108.p.ssafy.io
  #     - openvidu.recording=true
  #     - openvidu.recording.path=/opt/openvidu/recordings
  #     - SERVER_SSL_ENABLED=true
  #     - SERVER_SSL_KEYSTORE=/etc/certificates/fullchain.pem
  #     - SERVER_SSL_KEYSTORE_TYPE=PEM
  #     - SERVER_SSL_KEY_ALIAS=Cokkiri
  #   ports:
  #     - "4443:4443"
  #   volumes:
  #     - /etc/letsencrypt/live/i11e108.p.ssafy.io:/etc/certificates
  #   networks:
  #     - Cokkiri-develop-Network

  # coturn:
  #   image: instrumentisto/coturn  # coturn 이미지 사용
  #   restart: always  # 항상 재시작 설정
  #   command: ["-c", "/etc/coturn/turnserver.conf"]  # coturn 설정 파일을 사용하여 실행
  #   # volumes:
  #   #   - ./coturn.conf:/etc/coturn/turnserver.conf  # 로컬의 coturn.conf 파일을 컨테이너 내 설정 파일로 마운트
  #   networks:
  #     - Cokkiri-develop-Network  # openvidu-net 네트워크에 연결


volumes:
  mysql_develop_data:

networks:
  Cokkiri-develop-Network:
    driver: bridge
